apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-api
  namespace: api
spec:
  selector:
    matchLabels:
      app: moderation-api
  template:
    metadata:
      labels:
        app: moderation-api
        log: tokafka
    spec:
      replicas: 1
      automountServiceAccountToken: false
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - moderation-api
                topologyKey: "topology.kubernetes.io/zone"
      containers:
        - name: moderation-api
          image: 807070170018.dkr.ecr.eu-central-1.amazonaws.com/ab3moderator:1.0.4-production.build.104
          imagePullPolicy: Always
          env:
            - name: CORS_ALLOWED_LIST
              value: "http://localhost:3000,http://localhost:3000,https://harness.castl.ink"
            - name: AWS_IMAGES_S3_BUCKET
              value: "ab3images"
            - name: FLOW_DEFINITION_ARN
              value: "arn:aws:sagemaker:eu-central-1:807070170018:flow-definition/abmoderator"
            - name: RECORDING_CONFIGURATION_ARN
              value: "arn:aws:ivs:eu-central-1:807070170018:recording-configuration/mMoTPicPPHo2"
            - name: IVS_CHANNEL_ARN
              value: "arn:aws:ivs:eu-central-1:807070170018:channel"
            - name: REDIS_URL
              value: "signalr.zjqsrq.ng.0001.euc1.cache.amazonaws.com:6379"
          ports:
            - containerPort: 5000
          resources:
            requests:
              memory: "750Mi"
              cpu: "50m"
            limits:
              memory: "2048Mi"
              cpu: "500m"
      serviceAccount: moderation-api
